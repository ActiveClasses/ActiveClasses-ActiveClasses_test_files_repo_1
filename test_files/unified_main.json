{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.29.47.4906",
      "templateHash": "17622634307393598780"
    }
  },
  "parameters": {
    "namePrefix": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "A prefix that will be prepended to resource names"
      }
    },
    "uniqueid": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "A unique identifier that will be appended to resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "Sweden Central",
      "metadata": {
        "description": "The location in which all resources should be deployed."
      }
    },
    "varcosmosdbName": {
      "type": "string",
      "defaultValue": "[format('{0}-cosmosdb-research{1}', parameters('namePrefix'), parameters('uniqueid'))]"
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "mystorageaccount",
      "metadata": {
        "description": "The name of the container registry to be deployed"
      }
    },
    "storageSkuName": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "metadata": {
        "description": "The SKU to use for the Storage Account"
      }
    },
    "aiSearchRegion": {
      "type": "string",
      "defaultValue": "East US",
      "metadata": {
        "description": "The region for the Azure AI Search service"
      }
    }
  },
  "variables": {
    "varMachineLearning": "[format('{0}aml{1}', parameters('namePrefix'), parameters('uniqueid'))]",
    "logWorkspaceName": "[format('log-{0}', parameters('uniqueid'))]",
    "varMLAppInsightsName": "[format('{0}-ml-app-ins-{1}', parameters('namePrefix'), parameters('uniqueid'))]",
    "varStorageAccountName": "[format('{0}{1}{2}', parameters('namePrefix'), parameters('storageAccountName'), parameters('uniqueid'))]",
    "aiSearchName": "aisearch",
    "varaiSearchName": "[format('{0}{1}{2}', parameters('namePrefix'), variables('aiSearchName'), parameters('uniqueid'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('acrml{0}', parameters('uniqueid'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('varMLAppInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[format('stml{0}', parameters('uniqueid'))]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('ml-kv{0}', parameters('uniqueid'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": []
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2021-04-01",
      "name": "[variables('varMachineLearning')]",
      "location": "[parameters('location')]",
      "properties": {
        "description": "AML Workspace",
        "friendlyName": "[variables('varMachineLearning')]",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', format('ml-kv{0}', parameters('uniqueid')))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('varMLAppInsightsName'))]",
        "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', format('acrml{0}', parameters('uniqueid')))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', format('stml{0}', parameters('uniqueid')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', format('acrml{0}', parameters('uniqueid')))]",
        "[resourceId('Microsoft.Insights/components', variables('varMLAppInsightsName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('ml-kv{0}', parameters('uniqueid')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('stml{0}', parameters('uniqueid')))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2024-02-15-preview",
      "name": "[parameters('varcosmosdbName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "tags": {
        "defaultExperience": "Core (SQL)",
        "hidden-cosmos-mmspecial": ""
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "disableKeyBasedMetadataWriteAccess": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "analyticalStorageConfiguration": {
          "schemaType": "WellDefined"
        },
        "databaseAccountOfferType": "Standard",
        "enableMaterializedViews": false,
        "defaultIdentity": "FirstPartyIdentity",
        "networkAclBypass": "None",
        "disableLocalAuth": false,
        "enablePartitionMerge": false,
        "enablePerRegionPerPartitionAutoscale": false,
        "enableBurstCapacity": false,
        "enablePriorityBasedExecution": false,
        "minimalTlsVersion": "Tls12",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "Sweden Central",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "cors": [],
        "capabilities": [
          {
            "name": "EnableServerless"
          }
        ],
        "ipRules": [],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          }
        },
        "networkAclBypassResourceIds": [],
        "diagnosticLogSettings": {
          "enableFullTextQuery": "None"
        }
      },
      "identity": {
        "type": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('varStorageAccountName')]",
      "kind": "StorageV2",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageSkuName')]"
      },
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow",
          "ipRules": [],
          "virtualNetworkRules": []
        },
        "allowBlobPublicAccess": true
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2023-11-01",
      "name": "[variables('varaiSearchName')]",
      "location": "[parameters('aiSearchRegion')]",
      "sku": {
        "name": "standard"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default",
        "publicNetworkAccess": "enabled",
        "networkRuleSet": {
          "ipRules": []
        },
        "encryptionWithCmk": {
          "enforcement": "Unspecified"
        },
        "disableLocalAuth": false,
        "authOptions": {
          "apiKeyOnly": {}
        },
        "semanticSearch": "standard"
      }
    }
  ],
  "outputs": {
    "workspaceName": {
      "type": "string",
      "value": "[variables('varMachineLearning')]"
    },
    "workspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('varMachineLearning'))]"
    },
    "cosmosdbName": {
      "type": "string",
      "value": "[parameters('varcosmosdbName')]"
    },
    "cosmosDbUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('varcosmosdbName')), '2024-02-15-preview').documentEndpoint]"
    },
    "cosmosDbKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('varcosmosdbName')), '2024-02-15-preview').primaryMasterKey]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('varStorageAccountName'))]"
    },
    "aiSearchName": {
      "type": "string",
      "value": "[variables('varaiSearchName')]"
    },
    "aiSearchEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.search.windows.net', variables('varaiSearchName'))]"
    },
    "aiSearchAdminKey": {
      "type": "string",
      "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('varaiSearchName')), '2023-11-01').primaryKey]"
    }
  }
}